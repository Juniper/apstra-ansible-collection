---
- name: Test create/update/delete virtual_network
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Connect to Apstra
      junipernetworks.apstra.authenticate:
        logout: false
      register: auth

    - name: Create blueprint
      junipernetworks.apstra.blueprint:
        body:
          label: "test_blueprint"
          design: "two_stage_l3clos"
        lock_state: "ignore"
        auth_token: "{{ auth.token }}"
      register: bp

    - name: Show created blueprint
      ansible.builtin.debug:
        var: bp

    - name: Get the systems
      junipernetworks.apstra.apstra_facts:
        id: "{{ bp.id }}"
        gather_network_facts:
          - 'blueprints.nodes'
        node_type: 'system'

    - name: Show the systems
      ansible.builtin.debug:
        var: ansible_facts.apstra_facts.blueprints[bp.id.blueprint].nodes

    - name: Filter nodes with role leaf
      ansible.builtin.set_fact:
        leaf_nodes: >-
          {{
            ansible_facts.apstra_facts.blueprints[bp.id.blueprint].nodes
            | dict2items
            | selectattr('value.role', 'equalto', 'leaf')
            | map(attribute='key')
            | list
          }}

    - name: Show leaf nodes
      ansible.builtin.debug:
        var: leaf_nodes

    - name: Use the leaf_nodes to set the svi_ips
      ansible.builtin.set_fact:
        svi_ips: >-
          {%- set result = [] -%}
          {%- for node in leaf_nodes -%}
          {%- set _ = result.append({
              'system_id': node,
              'ipv4_mode': 'enabled',
              'ipv4_addr': None,
              'ipv6_mode': 'disabled',
              'ipv6_addr': None
            }) -%}
          {%- endfor -%}
          {{ result }}

    - name: Show svi_ips
      ansible.builtin.debug:
        var: svi_ips

    - name: Create virtual_network
      junipernetworks.apstra.virtual_network:
        id: "{{ bp.id }}"
        body:
          label: "test_virtual_network"
          description: "test VN description"
          ipv4_enabled: true
          virtual_gateway_ipv4_enabled: true
          vn_id: "16777214"
          vn_type: "vxlan"
          svi_ips: svi_ips
          dhcp_service: "dhcpServiceEnabled"
        auth_token: "{{ auth.token }}"
      register: vn

    - name: Show created virtual_network
      ansible.builtin.debug:
        var: vn

    - name: Create virtual_network (no change)
      junipernetworks.apstra.virtual_network:
        id: "{{ bp.id }}"
        body:
          label: "test_virtual_network"
          description: "test VN description"
          ipv4_enabled: true
          virtual_gateway_ipv4_enabled: true
          vn_id: "16777214"
          vn_type: "vxlan"
        auth_token: "{{ auth.token }}"

    - name: Modify virtual_network
      junipernetworks.apstra.virtual_network:
        id: "{{ vn.id }}"
        body:
          description: "test VN description edwin wuz here"
        auth_token: "{{ auth.token }}"

    - name: Commit the blueprint
      junipernetworks.apstra.blueprint:
        id: "{{ bp.id }}"
        lock_state: "ignore"
        state: committed
        auth_token: "{{ auth.token }}"
      register: blueprint_commit

    - name: Show committed blueprint
      ansible.builtin.debug:
        var: blueprint_commit

    - name: Delete the virtual_network
      junipernetworks.apstra.virtual_network:
        id: "{{ vn.id }}"
        state: absent
        auth_token: "{{ auth.token }}"
      register: vn_delete

    - name: Show deleted virtual_network
      ansible.builtin.debug:
        var: vn_delete

    - name: Commit blueprint
      junipernetworks.apstra.blueprint:
        id: "{{ bp.id }}"
        lock_state: "ignore"
        state: committed
        auth_token: "{{ auth.token }}"
      register: blueprint_unlock

    - name: Show blueprint
      ansible.builtin.debug:
        var: blueprint_unlock

    - name: Delete blueprint
      junipernetworks.apstra.blueprint:
        id: "{{ bp.id }}"
        state: absent
        auth_token: "{{ auth.token }}"
      register: blueprint_delete

    - name: Show deleted blueprint
      ansible.builtin.debug:
        var: blueprint_delete

    - name: Logout of Apstra
      junipernetworks.apstra.authenticate:
        logout: true
        auth_token: "{{ auth.token }}"
